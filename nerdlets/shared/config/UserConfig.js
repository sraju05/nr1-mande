import { USER_IDENTIFIER, VIDEO_EVENTS } from './constants'

export default {
  title: 'Audience',
  eventTypes: [
    {
      event: 'Global',
      attributes: [
        ['appName', 'Platform'],
        ['appVersion', 'Platform'],
        ['playerVersion', 'Platform'],
        ['playerName', 'Platform'],
        ['countryCode', 'Geography'],
        ['assetName', 'Content'],
        ['userAgentName', 'Platform'],
        ['userAgentOS', 'Platform'],
        ['userAgentVersion', 'Platform'],
        ['asnOrganization', 'Geography'],
        ['asnOwner', 'Geography'],
        ['BDUName', 'Geography'],
        ['city', 'Geography'],
        ['regionCode', 'Geography'],
        ['errorMessage', 'Error'],
        ['deviceId', 'Platform'],
        ['deviceModel', 'Platform'],
        ['deviceGroup', 'Platform'],
        ['deviceType', 'Platform'],
        ['osName', 'Platform'],
        ['osVersion', 'Platform'],
        ['userId', 'User'],
        ['userAisuid', 'User'],
        ['capiProvider', 'Content'],
        ['streamFormat', 'Content'],
        ['immersiveActiveCamera', 'Content'],
        ['drm', 'Content'],
        ['drmType', 'Content'],
        ['trackerName', 'Platform'],
        ['trackerVersion', 'Platform'],
        ['coreVersion', 'Platform'],
        ['playMethod', 'Content'],
        ['playbackMethod', 'Content'],
      ],
    },
    {
      event: 'PageAction',
      attributes: [],
    },
    {
      event: 'MobileVideo',
      attributes: [],
    },
    {
      event: 'RokuVideo',
      attributes: [],
    },
    {
      event: 'BrowserVideo',
      attributes: [],
    },
  ],
  metrics: [
    {
      title: 'Play Attempts',
      invertCompareTo: 'true',
      query: {
        nrql: `FROM ${VIDEO_EVENTS} SELECT count(*) as 'result' where actionName = 'CONTENT_REQUEST' `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Plays-Detail',
    },
    {
      title: 'Plays',
      invertCompareTo: 'true',
      query: {
        nrql: `FROM ${VIDEO_EVENTS} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_START' and playerName !='NexPlayer') + filter(uniqueCount(viewId, assetName), where actionName = 'CONTENT_START' and playerName = 'NexPlayer')- filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' AND timeSinceStarted > 0 AND timeSinceStarted < 5000) as 'result' `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Plays-Detail',
    },
    {
      title: 'Peak Concurrent Plays',
      invertCompareTo: 'true',
      query: {
        nrql: `SELECT max(views) as 'result' FROM ( SELECT uniquecount(viewId, assetName) as 'views' FROM ${VIDEO_EVENTS} where totalPlaytime > 1000 timeseries MAX) `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Plays-Detail',
    },
    {
      title: 'Total Playtime (minutes)',
      invertCompareTo: 'true',
      query: {
        nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSincePaused/1000/60), where action = 'CONTENT_RESUME' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'seek' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBackground/1000/60), where actionName = 'FOREGROUND' and contentplayhead > 0 and playMethod NOT IN ('multiview', 'timeslice'))) + filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod IN ('multiview', 'timeslice')) as 'result' `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Plays-Detail',
    },
    {
      title: 'Peak Unique Accounts',
      invertCompareTo: 'true',
      query: {
        nrql: `SELECT max(UniqueAccounts) as 'result' FROM ( SELECT uniqueCount(${USER_IDENTIFIER}) as 'UniqueAccounts' FROM ${VIDEO_EVENTS} timeseries MAX) `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Devices-Detail',
    },
    {
      title: 'Peak Unique Devices',
      invertCompareTo: 'true',
      query: {
        nrql: `SELECT max(UniqueDevices) as 'result' FROM ( SELECT uniquecount(deviceId OR deviceID) as 'UniqueDevices' FROM ${VIDEO_EVENTS} timeseries MAX facet appVersion) `,
        lookup: 'result',
      },
      detailDashboardId: 'Audience-Devices-Detail',
    },
  ],
  overviewDashboard: [
    {
      nrql: `SELECT count(*) as 'Attempts' FROM ${VIDEO_EVENTS} where actionName = 'CONTENT_REQUEST' TIMESERIES MAX `,
      columnStart: 1,
      columnEnd: 12,
      chartSize: 'micro',
      chartType: 'line',
      title: 'Play Attempts Trend',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_START' and playerName !='NexPlayer') + filter(uniqueCount(viewId, assetName), where actionName = 'CONTENT_START' and playerName = 'NexPlayer')- filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' AND timeSinceStarted > 0 AND timeSinceStarted < 5000) as 'Plays' TIMESERIES MAX `,
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'micro',
      chartType: 'line',
      title: 'Plays Trend',
      useSince: true,
    },
    {
      nrql: `SELECT max(views) as 'Peak Concurrent Plays' FROM ( SELECT uniquecount(viewId, assetName) as 'views' FROM ${VIDEO_EVENTS} where totalPlaytime > 1000 timeseries MAX)  TIMESERIES MAX `,
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'micro',
      chartType: 'line',
      title: 'Peak Concurrent Plays Trend',
      useSince: true,
    },
    {
      nrql: `SELECT max(UniqueAccounts) as 'Peak Unique Accounts' FROM ( SELECT uniqueCount(${USER_IDENTIFIER}) as 'UniqueAccounts' FROM ${VIDEO_EVENTS} timeseries MAX) TIMESERIES MAX `,
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'micro',
      chartType: 'line',
      title: 'Peak Unique Accounts Trend',
      useSince: true,
    },
    {
      nrql: `SELECT max(UniqueDevices) as 'Peak Unique Devices' FROM ( SELECT uniquecount(deviceId OR deviceID) as 'UniqueDevices' FROM ${VIDEO_EVENTS} timeseries MAX facet appVersion) TIMESERIES MAX `,
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'micro',
      chartType: 'line',
      title: 'Peak Unique Devices Trend',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'streamFormat',
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by Stream Format',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'assetType',
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by assetType',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'drm, drmType',
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by DRM',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'appVersion',
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by appVersion',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'osName, osVersion, userAgentOS, userAgentOSFull',
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by OS/OS Version',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 LIMIT 200 `,
      facets: 'city, regionCode, countryCode',
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by City (Top 200)',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 `,
      facets: 'playerName, playerVersion',
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by Player',
      useSince: true,
    },
    {
      nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) as 'Views' where totalPlaytime > 1000 LIMIT 200 `,
      facets: 'trackerName, coreVersion, trackerVersion',
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'small',
      chartType: 'pie',
      title: 'Views by Tracker/Core',
      useSince: true,
    },
  ],
  detailDashboards: [
    {
      id: 'Audience-Plays-Detail',
      config: [
        {
          nrql: `SELECT count(*) as 'Play Attempts' FROM ${VIDEO_EVENTS} where actionName = 'CONTENT_REQUEST' `,
          columnStart: 1,
          columnEnd: 4,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Play Attempts',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_START' and playerName !='NexPlayer') + filter(uniqueCount(viewId, assetName), where actionName = 'CONTENT_START' and playerName = 'NexPlayer')- filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' AND timeSinceStarted > 0 AND timeSinceStarted < 5000) as 'Plays' `,
          columnStart: 5,
          columnEnd: 8,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Plays',
          useSince: true,
        },
        {
          nrql: `SELECT uniqueCount(viewId) as 'View Ids' FROM ${VIDEO_EVENTS} where PageAction.actionName NOT IN ('PLAYER_READY','CONTENT_MANIFEST_REQUEST') AND totalPlaytime > 0 `,
          columnStart: 9,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Total Streams',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSincePaused/1000/60), where action = 'CONTENT_RESUME' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'seek' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBackground/1000/60), where actionName = 'FOREGROUND' and contentplayhead > 0 and playMethod NOT IN ('multiview', 'timeslice'))) + filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod IN ('multiview', 'timeslice')) as 'minutes' `,
          columnStart: 1,
          columnEnd: 4,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Total Playtime',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0)-filter(sum(timeSincePaused/1000/60), where action = 'content_resume')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'seek')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'connection')-filter(sum(timeSinceBackground/1000/60), where actionName = 'foreground' and contentplayhead > 0)) / uniqueCount(viewSession) as 'minutes' `,
          columnStart: 5,
          columnEnd: 8,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Avg Minutes per Player',
          useSince: true,
        },
        {
          nrql: `SELECT average(percentCompleted) FROM (SELECT max(contentPlayhead) / max (contentDuration) *100 as percentCompleted from MobileVideo, PageAction, BrowserVideo, RokuVideo where assetType = 'VOD' and contentDuration> 0 and contentDuration IS NOT NULL facet viewId, aisuid, appVersion limit max)`,
          columnStart: 9,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Average % Complete',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT uniqueCount(viewId) where PageAction.actionName NOT IN ('PLAYER_READY', 'CONTENT_MANIFEST_REQUEST') AND totalPlaytime > 1000 TIMESERIES MAX LIMIT 20 `,
          columnStart: 1,
          columnEnd: 6,
          chartSize: 'small',
          chartType: 'line',
          title: 'Peak Concurrent Plays Trend',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSincePaused/1000/60), where action = 'CONTENT_RESUME' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'seek' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection' and playMethod NOT IN ('multiview', 'timeslice')) - filter(sum(timeSinceBackground/1000/60), where actionName = 'FOREGROUND' and contentplayhead > 0 and playMethod NOT IN ('multiview', 'timeslice'))) + filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0 and playMethod IN ('multiview', 'timeslice')) as 'minutes' TIMESERIES MAX `,
          columnStart: 7,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'line',
          title: 'Total Playtime Trend',
          useSince: true,
        },
        {
          nrql: `SELECT max(views) FROM ( SELECT uniquecount(viewId) as 'views' FROM ${VIDEO_EVENTS} where PageAction.actionName NOT IN ('PLAYER_READY', 'CONTENT_MANIFEST_REQUEST') AND totalPlaytime > 1000 timeseries MAX facet appVersion) FACET weekdayOf(timestamp) SINCE 1 week ago `,
          noFacet: true,
          columnStart: 1,
          columnEnd: 12,
          chartSize: 'large',
          chartType: 'bar',
          title: 'Peak Concurrent Plays Past Week',
          useSince: false,
          click: 'doNothing',
        },
      ],
    },
    {
      id: 'Audience-Devices-Detail',
      config: [
        {
          nrql: `SELECT uniqueCount(${USER_IDENTIFIER}) as 'Accounts' FROM ${VIDEO_EVENTS} `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Unique Accounts',
          useSince: true,
        },
        {
          nrql: `SELECT max(UniqueAccounts) as 'Accounts' FROM ( SELECT uniqueCount(${USER_IDENTIFIER}) as 'UniqueAccounts' FROM ${VIDEO_EVENTS} timeseries MAX) `,
          columnStart: 4,
          columnEnd: 6,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Peak Unique Accounts',
          useSince: true,
        },
        {
          nrql: `SELECT max(UniqueAccounts) as 'result' FROM ( SELECT uniqueCount(${USER_IDENTIFIER}) as 'UniqueAccounts' FROM ${VIDEO_EVENTS} timeseries MAX) TIMESERIES `,
          columnStart: 7,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'line',
          title: 'Peak Unique Accounts Trend',
          useSince: true,
        },
        {
          nrql: `SELECT uniquecount(deviceId) as 'Devices' FROM ${VIDEO_EVENTS} `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Unique Devices',
          useSince: true,
        },
        {
          nrql: `SELECT max(UniqueDevices) as 'Devices' FROM ( SELECT uniquecount(deviceId OR deviceID) as 'UniqueDevices' FROM ${VIDEO_EVENTS} timeseries MAX facet appVersion) `,
          columnStart: 4,
          columnEnd: 6,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Peak Unique Devices',
          useSince: true,
        },
        {
          nrql: `SELECT max(UniqueDevices) as 'Peak Unique Devices' FROM ( SELECT uniquecount(deviceId OR deviceID) as 'UniqueDevices' FROM ${VIDEO_EVENTS} timeseries MAX facet appVersion) TIMESERIES `,
          columnStart: 7,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'line',
          title: 'Peak Unique Devices Trend',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0)-filter(sum(timeSincePaused/1000/60), where action = 'content_resume')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'seek')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'connection')-filter(sum(timeSinceBackground/1000/60), where actionName = 'foreground' and contentplayhead > 0)) / uniqueCount(${USER_IDENTIFIER}) as 'minutes' `,
          columnStart: 1,
          columnEnd: 4,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Avg Minutes Per User',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT (filter(sum(playtimeSinceLastEvent/1000/60), where contentPlayhead !=0)-filter(sum(timeSincePaused/1000/60), where action = 'content_resume')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'seek')-filter(sum(timeSinceBufferBegin/1000/60), where actionName = 'content_buffer_end' and bufferType = 'connection')-filter(sum(timeSinceBackground/1000/60), where actionName = 'foreground' and contentplayhead > 0)) / uniqueCount(deviceId) as 'minutes' `,
          columnStart: 5,
          columnEnd: 8,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Avg Minutes Per Device',
          useSince: true,
        },
        {
          nrql: `FROM ${VIDEO_EVENTS} SELECT filter(uniqueCount(viewId), where PageAction.actionName NOT IN ('PLAYER_READY','CONTENT_MANIFEST_REQUEST') AND totalPlaytime > 1000)/filter(uniquecount(deviceId), where totalPlaytime > 1000) as 'AVG Streams/Device' `,
          columnStart: 9,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Avg Streams Per Device',
          useSince: true,
        },
      ],
    },
  ],
}
